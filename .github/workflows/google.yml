# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Deploy to GKE

on:
  push:
    branches:
      - master

env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
 # GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-east1-c
  GKE_CLUSTER: viswa-valerian-gke-cluster1

jobs:
  setup-deploy:
    name: Setup, and Deploy
    runs-on: ubuntu-latest
  #  environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

  # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: "270.0.0"
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    # Deploy the code to the GKE cluster
    - name: Deploy
      run: |
        cd bank-of-anthos
        kubectl apply -f ./extras/jwt/jwt-secret.yaml
        kubectl apply -f ./kubernetes-manifests
